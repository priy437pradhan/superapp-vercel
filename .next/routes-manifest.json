{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/details/[id]",
      "regex": "^/details/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/details/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/update/[id]",
      "regex": "^/update/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/update/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/activity-log",
      "regex": "^/activity\\-log(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/activity\\-log(?:/)?$"
    },
    {
      "page": "/create",
      "regex": "^/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/input",
      "regex": "^/dashboard/input(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/input(?:/)?$"
    },
    {
      "page": "/dashboard/stringer",
      "regex": "^/dashboard/stringer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/stringer(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/list/input/inputDraft",
      "regex": "^/list/input/inputDraft(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/inputDraft(?:/)?$"
    },
    {
      "page": "/list/input/inputToStringer",
      "regex": "^/list/input/inputToStringer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/inputToStringer(?:/)?$"
    },
    {
      "page": "/list/input/inputWip",
      "regex": "^/list/input/inputWip(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/inputWip(?:/)?$"
    },
    {
      "page": "/list/input/outputToInput",
      "regex": "^/list/input/outputToInput(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/outputToInput(?:/)?$"
    },
    {
      "page": "/list/input/outputToStringer",
      "regex": "^/list/input/outputToStringer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/outputToStringer(?:/)?$"
    },
    {
      "page": "/list/input/outputWip",
      "regex": "^/list/input/outputWip(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/outputWip(?:/)?$"
    },
    {
      "page": "/list/input/published",
      "regex": "^/list/input/published(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/published(?:/)?$"
    },
    {
      "page": "/list/input/waitList",
      "regex": "^/list/input/waitList(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/waitList(?:/)?$"
    },
    {
      "page": "/list/input/waitingInOutput",
      "regex": "^/list/input/waitingInOutput(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/list/input/waitingInOutput(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/master/content",
      "regex": "^/master/content(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/content(?:/)?$"
    },
    {
      "page": "/master/location",
      "regex": "^/master/location(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/location(?:/)?$"
    },
    {
      "page": "/master/price",
      "regex": "^/master/price(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/price(?:/)?$"
    },
    {
      "page": "/master/role",
      "regex": "^/master/role(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/role(?:/)?$"
    },
    {
      "page": "/master/tag",
      "regex": "^/master/tag(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/tag(?:/)?$"
    },
    {
      "page": "/master/user",
      "regex": "^/master/user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/master/user(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}