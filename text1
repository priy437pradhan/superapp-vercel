"use client";
import withoutAuth from '@/hoc/withoutAuth';
import React, { useState } from "react";
import Link from "next/link";
import Image from "next/image";
import { getDeviceId } from '@/utils/deviceId';
import { useRouter } from 'next/navigation';

//import { Metadata } from "next";
//import Breadcrumb from "@/components/Breadcrumbs/Breadcrumb";
//import DefaultLayout from "@/components/Layouts/DefaultLayout";

import { signIn } from "@/services/authService";
import { useAuth } from "@/context/AuthContext";

/*export const metadata: Metadata = {
  title: "Next.js SignIn Page | Admin - Next.js Dashboard Template",
  description: "This is Next.js Signin Page Admin Dashboard Template",
};*/

const SignIn: React.FC = () => {
  const router = useRouter();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const { login } = useAuth();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      const deviceId = getDeviceId();
      const data = await signIn(email, password, deviceId);
      if (data.success) {
        login(data.data.access_token);
        router.push('/dashboard');
      } else {
        setError( data?.message || 'Error signing in.' );
      }
    } catch (error: any) {
      setError(error?.message || 'Error signing in.');
    }
  };
  const generateWatermarks = () => {
    const texts = [];
    for (let i = 0; i < 35; i++) {
      texts.push({
        id: i,
        left: Math.random() * 100,
        top: Math.random() * 100,
        size: Math.random() * 60 + 30,
        opacity: Math.random() * 0.08 + 0.02,
        animationDelay: Math.random() * 20,
        animationDuration: Math.random() * 15 + 20,
        rotation: Math.random() * 60 - 30,
      });
    }
    return texts;
  };

  const watermarkTexts = generateWatermarks();
  return (
    <>
      

      <div className="min-h-screen relative overflow-hidden">
      {/* Enhanced Gradient Background */}
      <div className="absolute inset-0 bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900"></div>
      <div className="absolute inset-0 bg-gradient-to-tl from-pink-900/20 via-transparent to-cyan-900/20"></div>
      
      {/* Animated Watermark Background */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {watermarkTexts.map((text) => (
          <div
            key={text.id}
            className="absolute font-bold text-white select-none animate-float"
            style={{
              left: ${text.left}%,
              top: ${text.top}%,
              fontSize: ${text.size}px,
              opacity: text.opacity,
              animationDelay: ${text.animationDelay}s,
              animationDuration: ${text.animationDuration}s,
              transform: rotate(${text.rotation}deg),
              fontFamily: 'monospace',
              fontWeight: '800',
              letterSpacing: '2px',
            }}
          >
            SUJIT
          </div>
        ))}
      </div>

      {/* Floating Particles */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {Array.from({ length: 20 }).map((_, i) => (
          <div
            key={i}
            className="absolute w-2 h-2 bg-white/10 rounded-full animate-pulse"
            style={{
              left: ${Math.random() * 100}%,
              top: ${Math.random() * 100}%,
              animationDelay: ${Math.random() * 3}s,
              animationDuration: ${Math.random() * 2 + 2}s,
            }}
          />
        ))}
      </div>

      {/* Main Content */}
      <div className="relative z-10 min-h-screen flex items-center justify-center p-4">
        <div className="w-full max-w-6xl">
          <div className="backdrop-blur-xl bg-white/10 rounded-3xl border border-white/20 shadow-2xl overflow-hidden hover:shadow-purple-500/20 transition-all duration-500">
            <div className="flex flex-wrap items-center">
              {/* Left Side - Brand Section */}
              <div className="hidden w-full xl:block xl:w-1/2">
                <div className="px-26 py-17.5 text-center">
                  <div className="mb-5.5 inline-block">
                    <h2 className="mb-9 text-4xl font-bold text-white sm:text-5xl drop-shadow-lg bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                      NL-CMS
                    </h2>
                    <div className="w-20 h-1 bg-gradient-to-r from-purple-400 to-blue-400 mx-auto rounded-full"></div>
                  </div>

                  <p className="2xl:px-20 text-white/90 text-lg mb-8 leading-relaxed">
                    Next-Level Content Management System
                    <br />
                    <span className="text-purple-300 text-sm">Powerful • Intuitive • Scalable</span>
                  </p>

                  {/* Enhanced Logo/Illustration */}
                  <div className="mt-15 inline-block opacity-90">
                    <div className="relative">
                      <svg
                      width="300"
                      height="300"
                      viewBox="0 0 350 350"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="drop-shadow-2xl animate-pulse"
                    >
                      <path
                        d="M33.5825 294.844L30.5069 282.723C25.0538 280.414 19.4747 278.414 13.7961 276.732L13.4079 282.365L11.8335 276.159C4.79107 274.148 0 273.263 0 273.263C0 273.263 6.46998 297.853 20.0448 316.653L35.8606 319.429L23.5737 321.2C25.2813 323.253 27.1164 325.196 29.0681 327.019C48.8132 345.333 70.8061 353.736 78.1898 345.787C85.5736 337.838 75.5526 316.547 55.8074 298.235C49.6862 292.557 41.9968 288.001 34.2994 284.415L33.5825 294.844Z"
                        fill="rgba(255,255,255,0.2)"
                      />
                      <path
                        d="M243.681 82.9153H241.762V30.3972C241.762 26.4054 240.975 22.4527 239.447 18.7647C237.918 15.0768 235.677 11.7258 232.853 8.90314C230.028 6.0805 226.674 3.84145 222.984 2.31385C219.293 0.786245 215.337 0 211.343 0H99.99C91.9222 0 84.1848 3.20256 78.48 8.90314C72.7752 14.6037 69.5703 22.3354 69.5703 30.3972V318.52C69.5703 322.512 70.3571 326.465 71.8859 330.153C73.4146 333.841 75.6553 337.192 78.48 340.015C81.3048 342.837 84.6582 345.076 88.3489 346.604C92.0396 348.131 95.9952 348.918 99.99 348.918H211.343C219.41 348.918 227.148 345.715 232.852 340.014C238.557 334.314 241.762 326.582 241.762 318.52V120.299H243.68L243.681 82.9153Z"
                        fill="rgba(255,255,255,0.1)"
                      />
                      <path
                        d="M212.567 7.9054H198.033C198.701 9.54305 198.957 11.3199 198.776 13.0793C198.595 14.8387 197.984 16.5267 196.997 17.9946C196.01 19.4625 194.676 20.6652 193.114 21.4967C191.552 22.3283 189.809 22.7632 188.039 22.7632H124.247C122.477 22.7631 120.734 22.3281 119.172 21.4964C117.61 20.6648 116.277 19.462 115.289 17.9942C114.302 16.5263 113.691 14.8384 113.511 13.079C113.33 11.3197 113.585 9.54298 114.254 7.9054H100.678C94.6531 7.9054 88.8749 10.297 84.6146 14.5542C80.3543 18.8113 77.9609 24.5852 77.9609 30.6057V318.31C77.9609 324.331 80.3543 330.105 84.6146 334.362C88.8749 338.619 94.6531 341.011 100.678 341.011H212.567C218.592 341.011 224.37 338.619 228.63 334.362C232.891 330.105 235.284 324.331 235.284 318.31V30.6053C235.284 24.5848 232.891 18.811 228.63 14.554C224.37 10.297 218.592 7.9054 212.567 7.9054Z"
                        fill="rgba(255,255,255,0.3)"
                      />
                    </svg>
                      
                      {/* Rotating Ring */}
                      <div className="absolute inset-0 animate-spin-slow">
  <svg width="480" height="480" viewBox="0 0 480 480">
    {/* Define the circular path */}
    <defs>
      <path
        id="circlePath"
        d="M 240,240 m -135,0 a 135,135 0 1,1 270,0 a 135,135 0 1,1 -270,0"
      />
    </defs>

    {/* Circle stroke (optional, light outline) */}
    <circle cx="240" cy="240" r="135" fill="none" stroke="rgba(255,255,255,0.1)" strokeWidth="1" />

    {/* Text along the path */}
    <text fill="white" fontSize="14" letterSpacing="4">
      <textPath href="#circlePath" startOffset="0">
        s-u-j-i-t • s-u-j-i-t • s-u-j-i-t • s-u-j-i-t •  s-u-j-i-t •  s-u-j-i-t •  s-u-j-i-t •  s-u-j-i-t • 
      </textPath>
    </text>
  </svg>
</div>
<div className="absolute inset-0 animate-spin-slow">
                        <svg width="480" height="480" viewBox="0 0 480 480">
                          <circle cx="140" cy="140" r="135" fill="none" stroke="rgba(255,255,255,0.1)" strokeWidth="1" strokeDasharray="10,5"/>
                        </svg>
                      </div>

                    </div>
                  </div>
                </div>
              </div>

              {/* Right Side - Login Form */}
              <div className="w-full xl:w-1/2">
                <div className="backdrop-blur-md bg-white/5 border-l border-white/10 xl:border-l">
                  <div className="w-full p-4 sm:p-12.5 xl:p-17.5">
                    <span className="mb-1.5 block font-medium text-purple-300 text-sm uppercase tracking-wide">Start for free</span>
                    <h2 className="mb-9 text-2xl font-bold text-white sm:text-3xl drop-shadow-lg">
                      Sign In to <span className="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">Admin Panel</span>
                    </h2>

                    <div className="space-y-6">
                      <div className="group">
                        <label className="mb-2.5 block font-medium text-white group-focus-within:text-purple-300 transition-colors">
                          Email Address
                        </label>
                        <div className="relative">
                          <input
                            type="email"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            required
                            placeholder="Enter your email"
                            className="w-full rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm py-4 pl-6 pr-12 text-white placeholder-white/50 outline-none focus:border-purple-400 focus:bg-white/15 transition-all duration-300 hover:border-white/30"
                          />
                          <span className="absolute right-4 top-4 text-white/50 group-focus-within:text-purple-300 transition-colors">
                            <svg
                              className="fill-current w-5 h-5"
                              viewBox="0 0 22 22"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M19.2516 3.30005H2.75156C1.58281 3.30005 0.585938 4.26255 0.585938 5.46567V16.6032C0.585938 17.7719 1.54844 18.7688 2.75156 18.7688H19.2516C20.4203 18.7688 21.4172 17.8063 21.4172 16.6032V5.4313C21.4172 4.26255 20.4203 3.30005 19.2516 3.30005ZM19.2516 4.84692C19.2859 4.84692 19.3203 4.84692 19.3547 4.84692L11.0016 10.2094L2.64844 4.84692C2.68281 4.84692 2.71719 4.84692 2.75156 4.84692H19.2516ZM19.2516 17.1532H2.75156C2.40781 17.1532 2.13281 16.8782 2.13281 16.5344V6.35942L10.1766 11.5157C10.4172 11.6875 10.6922 11.7563 10.9672 11.7563C11.2422 11.7563 11.5172 11.6875 11.7578 11.5157L19.8016 6.35942V16.5688C19.8703 16.9125 19.5953 17.1532 19.2516 17.1532Z"
                                fill="currentColor"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>

                      <div className="group">
                        <label className="mb-2.5 block font-medium text-white group-focus-within:text-purple-300 transition-colors">
                          Password
                        </label>
                        <div className="relative">
                          <input
                            type="password"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            required
                            placeholder="Enter your password"
                            className="w-full rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm py-4 pl-6 pr-12 text-white placeholder-white/50 outline-none focus:border-purple-400 focus:bg-white/15 transition-all duration-300 hover:border-white/30"
                          />
                          <span className="absolute right-4 top-4 text-white/50 group-focus-within:text-purple-300 transition-colors">
                            <svg
                              className="fill-current w-5 h-5"
                              viewBox="0 0 22 22"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M16.1547 6.80626V5.91251C16.1547 3.16251 14.0922 0.825009 11.4797 0.618759C10.0359 0.481259 8.59219 0.996884 7.52656 1.95938C6.46094 2.92188 5.84219 4.29688 5.84219 5.70626V6.80626C3.84844 7.18438 2.33594 8.93751 2.33594 11.0688V17.2906C2.33594 19.5594 4.19219 21.3813 6.42656 21.3813H15.5016C17.7703 21.3813 19.6266 19.525 19.6266 17.2563V11C19.6609 8.93751 18.1484 7.21876 16.1547 6.80626ZM8.55781 3.09376C9.31406 2.40626 10.3109 2.06251 11.3422 2.16563C13.1641 2.33751 14.6078 3.98751 14.6078 5.91251V6.70313H7.38906V5.67188C7.38906 4.70938 7.80156 3.78126 8.55781 3.09376ZM18.1141 17.2906C18.1141 18.7 16.9453 19.8688 15.5359 19.8688H6.46094C5.05156 19.8688 3.91719 18.7344 3.91719 17.325V11.0688C3.91719 9.52189 5.15469 8.28438 6.70156 8.28438H15.2953C16.8422 8.28438 18.1141 9.52188 18.1141 11V17.2906Z"
                                fill="currentColor"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>

                      {/*<div className="flex items-center justify-between">
                        <label className="flex items-center text-sm text-white/80 cursor-pointer">
                          <input type="checkbox" className="mr-2 rounded border-white/20 bg-white/10 text-purple-500 focus:ring-purple-400" />
                          Remember me
                        </label>
                        <button className="text-sm text-purple-300 hover:text-purple-200 transition-colors">
                          Forgot password?
                        </button>
                      </div>*/}

                      <div>
                        <button
                          onClick={handleSubmit}
                          
                          className="w-full rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 disabled:from-gray-600 disabled:to-gray-700 p-4 text-white font-semibold transition-all duration-300 transform hover:scale-105 disabled:scale-100 shadow-xl backdrop-blur-sm flex items-center justify-center gap-2"
                        >
                          Sign In to NL-CMS
                        </button>
                        {error && <p className="text-red-300 mt-2 text-sm">{error}</p>}
                      </div>

                      <div className="text-center">
                        <p className="text-white/80 text-sm">
                          Don't have an account?{" "}
                          <Link href="/auth/signup" className="text-purple-300 hover:text-purple-200 font-medium transition-colors underline decoration-purple-300/50 hover:decoration-purple-200">
                            Sign Up
                          </Link>
                          
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes float {
          0%, 100% {
            transform: translateY(0px) rotate(0deg);
          }
          25% {
            transform: translateY(-25px) rotate(3deg);
          }
          50% {
            transform: translateY(-15px) rotate(-3deg);
          }
          75% {
            transform: translateY(-20px) rotate(2deg);
          }
        }

        @keyframes spin-slow {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(360deg);
          }
        }

        .animate-float {
          animation: float 25s ease-in-out infinite;
        }

        .animate-spin-slow {
          animation: spin-slow 30s linear infinite;
        }
      `}</style>
    </div>
    </>
  );
};

//export default SignIn;
export default withoutAuth(SignIn);